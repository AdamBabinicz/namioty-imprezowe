{"version":3,"file":"static/js/999.a32a5402.chunk.js","mappings":"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","sources":["components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { FaSun, FaMoon, FaBars, FaTimes } from \"react-icons/fa\";\nimport { FaTent } from \"react-icons/fa6\";\nimport { motion } from \"framer-motion\";\nimport img from \"../assets/8.avif\";\n\nconst Navbar = ({ toggleTheme }) => {\n  const savedDarkMode = localStorage.getItem(\"darkMode\") === \"true\";\n  const [darkMode, setDarkMode] = useState(savedDarkMode);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleDarkMode = () => {\n    const newDarkMode = !darkMode;\n    setDarkMode(newDarkMode);\n    localStorage.setItem(\"darkMode\", newDarkMode);\n    document.body.classList.toggle(\"dark-mode\", newDarkMode);\n    toggleTheme();\n  };\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleSmoothScroll = (e, targetId) => {\n    e.preventDefault();\n    const targetElement = document.getElementById(targetId);\n    if (targetElement) {\n      const navbarHeight = document.querySelector(\"nav\").offsetHeight;\n      const targetPosition = targetElement.offsetTop - navbarHeight;\n      window.scrollTo({\n        top: targetPosition,\n        behavior: \"smooth\",\n      });\n      setIsOpen(false);\n    }\n  };\n\n  const scrollToTop = (e) => {\n    e.preventDefault();\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    const savedDarkMode = localStorage.getItem(\"darkMode\") === \"true\";\n    setDarkMode(savedDarkMode);\n    document.body.classList.toggle(\"dark-mode\", savedDarkMode);\n  }, []);\n\n  return (\n    <NavbarContainer darkMode={darkMode}>\n      <NavbarWrapper>\n        <Logo onClick={scrollToTop}>\n          <img src={img} alt=\"fotografia namiotu białego\" />\n          Wynajem Namiotów\n        </Logo>\n        <MobileIcon onClick={toggleMenu}>\n          {isOpen ? <FaTimes /> : <FaBars />}\n        </MobileIcon>\n      </NavbarWrapper>\n      <NavLinksContainer>\n        <NavLinks isOpen={isOpen}>\n          <NavLink\n            href=\"#start\"\n            onClick={(e) => handleSmoothScroll(e, \"start\")}\n          >\n            Start\n          </NavLink>\n          <NavLink\n            href=\"#o-firmie\"\n            onClick={(e) => handleSmoothScroll(e, \"o-firmie\")}\n          >\n            O&nbsp;firmie\n          </NavLink>\n          <NavLink\n            href=\"#kontakt\"\n            onClick={(e) => handleSmoothScroll(e, \"kontakt\")}\n          >\n            Kontakt\n          </NavLink>\n          <NavLink\n            href=\"#oferta\"\n            onClick={(e) => handleSmoothScroll(e, \"oferta\")}\n          >\n            Oferta\n          </NavLink>\n          <DarkModeToggle onClick={toggleDarkMode}>\n            {darkMode ? <FaSun /> : <FaMoon />}\n          </DarkModeToggle>\n          <MobileTentIcon>\n            <span\n              data-tooltip-id=\"tentTooltip\"\n              data-tooltip-content=\"Namioty Imprezowe\"\n            >\n              <motion.div\n                whileHover={{ scale: 1.1, rotate: 10 }}\n                whileTap={{ scale: 0.9 }}\n                transition={{ type: \"spring\", stiffness: 300 }}\n              >\n                <FaTent size={40} />\n              </motion.div>\n            </span>\n          </MobileTentIcon>\n        </NavLinks>\n      </NavLinksContainer>\n    </NavbarContainer>\n  );\n};\n\nconst NavbarContainer = styled(({ darkMode, ...props }) => <nav {...props} />)`\n  position: fixed;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 999;\n  background: ${({ theme }) => theme.body};\n  color: ${({ theme }) => theme.text};\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n\n  ${({ darkMode }) =>\n    darkMode &&\n    css`\n      background: ${({ theme }) => theme.body};\n      color: ${({ theme }) => theme.text};\n    `}\n`;\n\nconst NavbarWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  max-width: 960px;\n  padding: 20px;\n`;\n\nconst Logo = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  color: ${({ theme }) => theme.text};\n\n  img {\n    width: 50px;\n    height: auto;\n    margin-right: 10px;\n  }\n`;\n\nconst MobileIcon = styled.div`\n  display: none;\n\n  @media screen and (max-width: 960px) {\n    display: block;\n    cursor: pointer;\n    font-size: 1.5rem;\n    color: ${({ theme }) => theme.text};\n    z-index: 1000;\n  }\n`;\n\nconst NavLinksContainer = styled.div`\n  @media screen and (min-width: 961px) {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    flex-direction: row;\n    background: none;\n    color: ${({ theme }) => theme.text};\n  }\n`;\n\nconst NavLinks = styled(({ isOpen, ...props }) => <div {...props} />)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 20px;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: ${({ theme }) => theme.body};\n  color: ${({ theme }) => theme.text};\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ isOpen }) =>\n    isOpen ? \"translateY(0)\" : \"translateY(-100%)\"};\n  width: 100%;\n  z-index: 998;\n\n  @media screen and (min-width: 961px) {\n    display: flex;\n    flex-direction: row;\n    gap: 0;\n    position: relative;\n    transform: translateY(0);\n    background: none;\n  }\n`;\n\nconst NavLink = styled.a`\n  color: ${({ theme }) => theme.text};\n  text-decoration: none;\n  padding: 1rem 0;\n  text-align: center;\n  transition: color 0.3s;\n\n  &:hover {\n    color: ${({ theme }) => theme.linkHover};\n  }\n\n  @media screen and (min-width: 961px) {\n    padding: 0;\n    margin: 0 10px;\n  }\n`;\n\nconst MobileTentIcon = styled.div`\n  display: none;\n\n  @media screen and (max-width: 960px) {\n    display: block;\n    text-align: center;\n    margin-top: 20px;\n  }\n`;\n\nconst DarkModeToggle = styled.div`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n\n  svg {\n    font-size: 1.2rem;\n    color: ${({ theme }) => theme.text};\n    transition: color 0.3s;\n  }\n\n  &:hover svg {\n    color: ${({ theme }) => theme.linkHover};\n  }\n\n  @media screen and (min-width: 961px) {\n    margin-top: 0;\n    margin-left: 10px; /* Dodaj margines lewy */\n  }\n`;\n\nexport default Navbar;\n"],"names":["NavbarContainer","styled","_ref2","darkMode","props","_jsx","_templateObject","_taggedTemplateLiteral","_ref3","theme","body","_ref4","text","_ref5","css","_templateObject2","_ref6","_ref7","NavbarWrapper","div","_templateObject3","Logo","_templateObject4","_ref8","MobileIcon","_templateObject5","_ref9","NavLinksContainer","_templateObject6","_ref10","NavLinks","_ref11","isOpen","_templateObject7","_ref12","_ref13","_ref14","NavLink","a","_templateObject8","_ref15","_ref16","linkHover","MobileTentIcon","_templateObject9","DarkModeToggle","_templateObject10","_ref17","_ref18","_ref","toggleTheme","savedDarkMode","localStorage","getItem","setDarkMode","useState","setIsOpen","handleSmoothScroll","e","targetId","preventDefault","targetElement","document","getElementById","navbarHeight","querySelector","offsetHeight","targetPosition","offsetTop","window","scrollTo","top","behavior","useEffect","classList","toggle","_jsxs","children","onClick","src","img","alt","toggleMenu","FaTimes","FaBars","href","toggleDarkMode","newDarkMode","setItem","FaSun","FaMoon","motion","whileHover","scale","rotate","whileTap","transition","type","stiffness","FaTent","size"],"sourceRoot":""}