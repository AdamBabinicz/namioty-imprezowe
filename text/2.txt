.dark-mode {
    background: #333;
    color: #f0f0f0;
  }
  .light-mode {
    background: #fff;
    color: #333;
  }


import React from "react";
import styled from "styled-components";
import { motion } from "framer-motion";

const AboutSection = styled.section`
  padding: 2rem;
  margin: 0 5rem;
`;

export const About = () => {
  return (
    <AboutSection id="o-firmie">
      <motion.h2
        initial={{ x: -200 }}
        animate={{ x: 0 }}
        transition={{ delay: 0.3 }}
      >
        O&nbsp;firmie
      </motion.h2>
      <motion.p
        initial={{ x: 200 }}
        animate={{ x: 0 }}
        transition={{ delay: 0.6 }}
      >
        Nasza firma "Słodkolandia wita:" specjalizuje się w wynajmie wysokiej
        jakości namiotów imprezowych.
      </motion.p>
    </AboutSection>
  );
};



import React from "react";
import styled from "styled-components";

const Overlay = styled.div`
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 10;
`;

const ModalContainer = styled.div`
  background: ${(props) => props.theme.background};
  color: ${(props) => props.theme.color};
  padding: 24px;
  border-radius: 8px;
  max-width: 500px;
  width: 100%;
  position: relative;
  margin: 0 1rem;
  box-shadow: ${(props) =>
    props.theme.mode === "dark"
      ? "0 2px 8px rgba(255, 255, 255, 0.6)" // Cień dla motywu dark
      : "0 2px 8px rgba(0, 0, 0, 0.2)"}; // Cień dla motywu light
`;

const ModalHeader = styled.h2`
  margin-top: 0;
  text-align: center;
`;

const ModalContent = styled.p`
  margin: 16px 0;
  text-align: left;
`;

const ModalImage = styled.img`
  max-width: 100%;
  border-radius: 8px;
  max-height: 280px;
  display: block;
  margin: auto;

  @media (min-width: 768px) {
    object-fit: contain;
  }
`;

const CloseButton = styled.button`
  position: absolute;
  top: 8px;
  right: 8px;
  background: none;
  border: none;
  color: ${(props) => props.theme.color};
  font-size: 1.5rem;
  cursor: pointer;
`;

const Modal = ({ isOpen, onClose, header, content, imgSrc }) => {
  if (!isOpen) return null;

  return (
    <Overlay onClick={onClose}>
      <ModalContainer onClick={(e) => e.stopPropagation()}>
        <CloseButton onClick={onClose}>&times;</CloseButton>
        <ModalHeader>{header}</ModalHeader>
        <ModalContent>{content}</ModalContent>
        {imgSrc && <ModalImage src={imgSrc} alt="Modal content" />}
      </ModalContainer>
    </Overlay>
  );
};

export default Modal;



import React from "react";
import styled from "styled-components";
import { motion } from "framer-motion";
import { FaTimes } from "react-icons/fa";

const ModalOverlay = styled(motion.div)`
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
`;

const ModalContent = styled(motion.div)`
  background: ${({ theme }) => theme.body};
  padding: 2rem;
  border-radius: 10px;
  box-shadow: 0 10px 20px ${({ theme }) => theme.cardShadow};
  max-width: 500px;
  width: 100%;
  position: relative;
  z-index: 1001;
`;

const CloseButton = styled.button`
  position: absolute;
  top: 10px;
  right: 10px;
  background: transparent;
  border: none;
  cursor: pointer;
  color: ${({ theme }) => theme.text};
  font-size: 1.5rem;
  transition: color 0.3s ease;

  &:hover {
    color: ${({ theme }) => theme.linkHover};
  }
`;

const Modal = ({ closeModal, children }) => (
  <ModalOverlay
    initial={{ opacity: 0 }}
    animate={{ opacity: 1 }}
    exit={{ opacity: 0 }}
    onClick={closeModal}
  >
    <ModalContent
      initial={{ y: -100, opacity: 0 }}
      animate={{ y: 0, opacity: 1 }}
      exit={{ y: -100, opacity: 0 }}
      onClick={(e) => e.stopPropagation()}
    >
      <CloseButton onClick={closeModal}>
        <FaTimes />
      </CloseButton>
      {children}
    </ModalContent>
  </ModalOverlay>
);

export default Modal;



import React from "react";
import styled, { ThemeProvider } from "styled-components";
import { motion } from "framer-motion";
import { FaTimes } from "react-icons/fa";
import { lighten } from "polished";

const ModalOverlay = styled(motion.div)`
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
`;

const ModalContent = styled(motion.div)`
  background: ${({ theme }) => lighten(0.2, theme.body)};
  padding: 0.3rem;
  border-radius: 10px;
  box-shadow: 0 10px 20px ${({ theme }) => theme.cardShadow};
  width: 90vw;
  max-width: 600px;
  height: auto;
  max-height: 80vh;
  position: relative;
  overflow: hidden;

  .modal-text {
    font-size: 1rem;
    line-height: 1.5;
  }

  .modal-image {
    width: 100%;
    height: auto;
    object-fit: contain;
    border-radius: 7px;
  }

  @media (max-width: 768px) {
    width: 90vw;
    max-width: 90vw;
  }
`;

const CloseButton = styled.button`
  position: absolute;
  top: 10px;
  right: 10px;
  background: transparent;
  border: none;
  cursor: pointer;
  color: ${({ theme }) => theme.text};
  font-size: 1.5rem;
  transition: color 0.3s ease;

  &:hover {
    color: ${({ theme }) => theme.linkHover};
  }
`;

const Modal = ({ closeModal, children }) => (
  <ModalOverlay
    initial={{ opacity: 0 }}
    animate={{ opacity: 1 }}
    exit={{ opacity: 0 }}
    onClick={closeModal}
  >
    <ModalContent
      initial={{ y: -100, opacity: 0 }}
      animate={{ y: 0, opacity: 1 }}
      exit={{ y: -100, opacity: 0 }}
      onClick={(e) => e.stopPropagation()}
    >
      <CloseButton onClick={closeModal}>
        <FaTimes />
      </CloseButton>
      {React.isValidElement(children) ? (
        React.cloneElement(children, {
          className: children.props.src ? "modal-image" : "modal-text",
        })
      ) : (
        <div className="modal-text">{children}</div>
      )}
    </ModalContent>
  </ModalOverlay>
);

export default Modal;


import React from "react";
import styled from "styled-components";
import Slider from "react-slick";
import { motion } from "framer-motion";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";

const SliderContainer = styled.section`
  padding: 2rem;
  background: ${({ theme }) => theme.body};
  color: ${({ theme }) => theme.text};
`;

const EquipmentSlide = styled.div`
  display: flex !important;
  flex-direction: column;
  align-items: center;
  text-align: center;
  img {
    width: 100%;
    height: auto;
    border-radius: 10px;
    margin-bottom: 1rem;
  }
  p {
    margin: 0.5rem 0;
  }
`;

const slides = [
  { src: "/assets/1.jpg", description: "Namiot 1", price: "100 zł" },
  { src: "/assets/2.jpg", description: "Namiot 2", price: "200 zł" },
  { src: "/assets/3.jpg", description: "Namiot 3", price: "300 zł" },
];

const settings = {
  dots: true,
  infinite: true,
  speed: 500,
  slidesToShow: 1,
  slidesToScroll: 1,
  adaptiveHeight: true,
};

export const EquipmentSlider = () => {
  return (
    <SliderContainer>
      <motion.h2
        initial={{ y: -200 }}
        animate={{ y: 0 }}
        transition={{ delay: 0.3 }}
      >
        Galeria sprzętu
      </motion.h2>
      <Slider {...settings}>
        {slides.map((slide, index) => (
          <EquipmentSlide key={index}>
            <img src={slide.src} alt={slide.description} />
            <p>{slide.description}</p>
            <p>{slide.price}</p>
          </EquipmentSlide>
        ))}
      </Slider>
    </SliderContainer>
  );
};




import React from "react";
import styled from "styled-components";
import { motion } from "framer-motion";
import image from "../assets/1.jpg";

const HeaderContainer = styled.header`
  height: 100vh;
  background: url(${image}) center center/cover no-repeat;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  padding: 0 5rem;
  margin: 1rem 5rem 2rem;
  border-radius: 15px;

  @media (max-width: 768px) {
    margin: 0 1rem;
    padding: 1rem;
  }
`;

const HeaderContent = styled(motion.div)`
  background: rgba(0, 0, 0, 0.5);
  padding: 2rem;
  border-radius: 10px;
  text-align: center;
  color: #fff;
`;

export const Header = () => {
  return (
    <HeaderContainer>
      <HeaderContent
        initial={{ opacity: 0, scale: 0.8 }}
        animate={{ opacity: 1, scale: 1 }}
        transition={{ duration: 0.5 }}
      >
        <h1>Namioty imprezowe</h1>
      </HeaderContent>
    </HeaderContainer>
  );
};



import React, { useState } from "react";
import styled, { ThemeProvider } from "styled-components";
import { lightTheme, darkTheme } from "./styles/themes";
import Navbar from "./components/Navbar";
import { Header } from "./components/Header";
import { Footer } from "./components/Footer";
import Gallery from "./components/Gallery";
import About from "./components/About";
import Contact from "./components/Contact";
import { EquipmentSlider } from "./components/EquipmentSlider";
import { CookieConsent } from "react-cookie-consent";
import { GlobalStyle } from "./styles/GlobalStyle";
import ScrollToTopButton from "./ScrollToTopButton";

const AppContainer = styled.div`
  display: flex;
  flex-direction: column;
  min-height: 100vh;
`;

function App() {
  const [theme, setTheme] = useState("light");

  const toggleTheme = () => {
    const newTheme = theme === "light" ? "dark" : "light";
    setTheme(newTheme);
    updateBodyClass(newTheme);
  };

  // Funkcja do aktualizacji klasy na body w zależności od motywu
  const updateBodyClass = (theme) => {
    if (theme === "dark") {
      document.body.classList.add("dark-mode");
      document.body.classList.remove("light-mode");
    } else {
      document.body.classList.add("light-mode");
      document.body.classList.remove("dark-mode");
    }
  };

  return (
    <ThemeProvider theme={theme === "light" ? lightTheme : darkTheme}>
      <GlobalStyle />
      <AppContainer id="start">
        <Navbar toggleTheme={toggleTheme} />
        <Header />
        <About />
        {/* <EquipmentSlider theme={theme} /> */}
        <Contact />
        <Gallery theme={theme} />
        {/* Przekazanie aktualnego motywu do Gallery */}
        <Footer />
        <CookieConsent>
          Ta strona korzysta z plików cookie, aby zapewnić najlepszą jakość
          korzystania z niej.
        </CookieConsent>
        <ScrollToTopButton />
      </AppContainer>
    </ThemeProvider>
  );
}

export default App;



import React from "react";
import styled from "styled-components";
import { FaFacebook, FaTwitter, FaInstagram } from "react-icons/fa";
import { FaTent } from "react-icons/fa6";

const FooterContainer = styled.footer`
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 2rem;
  background: ${({ theme }) => theme.body};
  color: ${({ theme }) => theme.text};
  padding: 5rem;

  @media (max-width: 768px) {
    margin: 0 1rem 1.5rem;
    padding: 1rem;
  }

  span svg {
    font-size: 3rem;

    @media (max-width: 768px) {
      font-size: 1.5rem;
    }
  }
`;

const SocialIcons = styled.div`
  display: flex;
  align-items: center;
  a {
    font-size: 1.5rem;
    color: ${({ theme }) => theme.text};
    margin: 0 0.5rem;
  }
`;

export const Footer = () => {
  return (
    <FooterContainer>
      <p>Radom, 2024 - {new Date().getFullYear()}.</p>
      <span>
        <FaTent />
      </span>
      <SocialIcons>
        <a
          href="https://facebook.com"
          target="_blank"
          rel="noopener noreferrer"
        >
          <FaFacebook />
        </a>
        <a href="https://twitter.com" target="_blank" rel="noopener noreferrer">
          <FaTwitter />
        </a>
        <a
          href="https://instagram.com"
          target="_blank"
          rel="noopener noreferrer"
        >
          <FaInstagram />
        </a>
      </SocialIcons>
    </FooterContainer>
  );
};




import React, { useState, useEffect } from "react";
import styled, { css } from "styled-components";
import { FaSun, FaMoon, FaBars, FaTimes } from "react-icons/fa";
import img from "../assets/1.png";

const Navbar = ({ toggleTheme }) => {
  // Pobranie preferencji motywu z local storage lub ustawienie domyślnie jasnego motywu
  const savedDarkMode = localStorage.getItem("darkMode") === "true";
  const [darkMode, setDarkMode] = useState(savedDarkMode);
  const [isOpen, setIsOpen] = useState(false);

  // Funkcja do przełączania motywu
  const toggleDarkMode = () => {
    const newDarkMode = !darkMode;
    setDarkMode(newDarkMode);
    localStorage.setItem("darkMode", newDarkMode); // Zapisanie preferencji w local storage
    document.body.classList.toggle("dark-mode", newDarkMode);
    toggleTheme();
  };

  // Funkcja do przełączania menu mobilnego
  const toggleMenu = () => {
    setIsOpen(!isOpen);
  };

  // Obsługa płynnego scrollowania do sekcji
  const handleSmoothScroll = (e, targetId) => {
    e.preventDefault();
    const targetElement = document.getElementById(targetId);
    if (targetElement) {
      const navbarHeight = document.querySelector("nav").offsetHeight;
      const targetPosition = targetElement.offsetTop - navbarHeight;
      window.scrollTo({
        top: targetPosition,
        behavior: "smooth",
      });
      setIsOpen(false);
    }
  };

  // Efekt umożliwiający zachowanie preferencji motywu po odświeżeniu strony
  useEffect(() => {
    // Pobranie preferencji z local storage po załadowaniu komponentu
    const savedDarkMode = localStorage.getItem("darkMode") === "true";
    setDarkMode(savedDarkMode);
    document.body.classList.toggle("dark-mode", savedDarkMode);
  }, []);

  return (
    <NavbarContainer darkMode={darkMode}>
      <NavbarWrapper>
        <img src={img} alt="logo" />
        <Logo>Wynajem Namiotów</Logo>
        <MobileIcon onClick={toggleMenu}>
          {isOpen ? <FaTimes /> : <FaBars />}
        </MobileIcon>
      </NavbarWrapper>
      <NavLinksContainer>
        <NavLinks isOpen={isOpen}>
          <NavLink
            href="#start"
            onClick={(e) => handleSmoothScroll(e, "start")}
          >
            Start
          </NavLink>
          <NavLink
            href="#o-firmie"
            onClick={(e) => handleSmoothScroll(e, "o-firmie")}
          >
            O firmie
          </NavLink>
          <NavLink
            href="#galeria"
            onClick={(e) => handleSmoothScroll(e, "galeria")}
          >
            Galeria
          </NavLink>
          <NavLink
            href="#kontakt"
            onClick={(e) => handleSmoothScroll(e, "kontakt")}
          >
            Kontakt
          </NavLink>
          <DarkModeToggle onClick={toggleDarkMode}>
            {darkMode ? <FaSun /> : <FaMoon />}
          </DarkModeToggle>
        </NavLinks>
      </NavLinksContainer>
    </NavbarContainer>
  );
};

// Styled components - bez zmian
const NavbarContainer = styled(({ darkMode, ...props }) => <nav {...props} />)`
  position: fixed;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 999;
  background-color: ${({ theme }) => theme.body};
  color: ${({ theme }) => theme.text};
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);

  ${({ darkMode }) =>
    darkMode &&
    css`
      background-color: ${({ theme }) => theme.body};
      color: ${({ theme }) => theme.text};
    `}
`;

const NavbarWrapper = styled.div`
  display: flex;
  justify-content: flex-start;
  align-items: center;
  width: 100%;
  max-width: 960px;
  padding: 20px;

  img {
    width: 10%;
    margin-right: 0.5rem;
  }
`;

const Logo = styled.h1`
  font-size: 1.5rem;
  margin: 0;
  background: ${({ theme }) => theme.body};
  color: ${({ theme }) => theme.text};
  z-index: 1001;
`;

const MobileIcon = styled.div`
  display: none;

  @media screen and (max-width: 960px) {
    display: block;
    cursor: pointer;
    font-size: 1.5rem;
    color: ${({ theme }) => theme.text};
    z-index: 1000;
    position: absolute;
    top: 50%;
    right: 20px;
    transform: translateY(-50%);
  }
`;

const NavLinksContainer = styled.div`
  @media screen and (min-width: 961px) {
    display: flex;
    justify-content: space-around;
    align-items: center;
    flex-direction: row;
    position: relative;
    transform: translateY(0);
    background: none;
    color: ${({ theme }) => theme.text};
    top: auto;
    left: auto;
    right: auto;
    bottom: auto;
    height: auto;
    width: auto;
  }
`;

const NavLinks = styled(({ isOpen, ...props }) => <div {...props} />)`
  display: flex;
  justify-content: center;
  flex-direction: column;
  gap: 20px;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: ${({ theme }) => theme.body};
  color: ${({ theme }) => theme.text};
  transition: transform 0.3s ease-in-out;
  transform: ${({ isOpen }) =>
    isOpen ? "translateY(0)" : "translateY(-100%)"};
  width: 100%;
  z-index: 998;

  @media screen and (min-width: 961px) {
    display: flex;
    position: relative;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
    transform: translateY(0);
    background: none;
    color: ${({ theme }) => theme.text};
    top: auto;
    left: auto;
    right: auto;
    bottom: auto;
    height: auto;
    width: auto;
  }
`;

const NavLink = styled.a`
  color: ${({ theme }) => theme.text};
  text-decoration: none;
  padding: 1rem 0;
  text-align: center;
  transition: color 0.3s;

  &:hover {
    color: ${({ theme }) => theme.linkHover};
  }

  @media screen and (min-width: 961px) {
    padding: 0;
    margin: 0 10px;
  }
`;

const DarkModeToggle = styled.div`
  cursor: pointer;
  display: flex;
  justify-content: center;
  margin-top: 20px;

  svg {
    font-size: 1.2rem;
    color: ${({ theme }) => theme.text};
    transition: color 0.3s;
  }

  &:hover svg {
    color: ${({ theme }) => theme.linkHover};
  }

  @media screen and (min-width: 961px) {
    margin-top: 0;
  }
`;

export default Navbar;



import React, { useEffect, useState } from "react";
import Slider from "react-slick";
import styled, { ThemeProvider } from "styled-components";
import { FaArrowLeft, FaArrowRight } from "react-icons/fa";
import { motion, useAnimation } from "framer-motion";
import image1 from "../assets/1.jpg";
import image2 from "../assets/2.jpg";
import image3 from "../assets/3.jpg";
import image4 from "../assets/1.webp";
import image5 from "../assets/17.jpg";
import image6 from "../assets/18.jpg";
import { lightTheme, darkTheme } from "../styles/themes";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";

const GalleryContainer = styled.section`
  /* padding: 32px; */
  margin: 0 5rem;
  padding: 2rem;
  background: ${(props) =>
    props.theme.background}; /* Ustawienie tła zgodnie z motywem */
  position: relative;
  z-index: 0;
  border-radius: 15px;

  @media (max-width: 768px) {
    margin: 0 1rem;
    padding: 1rem;
  }
`;

const MotionTitle = styled(motion.h2)`
  /* margin: 0 5rem;
  font-size: 1.5rem;
  margin-bottom: 16px;
  color: ${(props) => props.theme.text};

  @media (min-width: 768px) {
    font-size: 2.5rem;
  } */
  font-size: 2rem;
  color: ${({ theme }) => theme.text};
  margin-bottom: 2rem;
  margin-left: 5rem;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);

  @media (max-width: 768px) {
    font-size: 1.7rem;
    margin-bottom: 1.5rem;
    margin-left: 0;
    text-align: center;
  }
`;

const ImageWrapper = styled.div`
  position: relative;
`;

const Image = styled.img`
  width: 100%;
  height: 400px;
  object-fit: cover;
  transition: transform 0.3s ease-in-out;

  &:hover {
    transform: scale(1.05);
  }

  @media (min-width: 768px) {
    height: 600px;
    margin: 0 auto;
    object-fit: contain;
  }
`;

const ImageOverlay = styled(motion.div)`
  position: absolute;
  top: 90%;
  left: 50%;
  transform: translate(-50%, -90%);
  padding: 10px;
  background: rgba(0, 0, 0, 0.5);
  color: ${(props) => props.theme.text};
  text-align: center;
  opacity: 0;
  transition: opacity 0.3s;

  @media (min-width: 768px) {
    font-size: 0.8rem;
    max-width: 100%;
  }
`;

const ImageWrapperHover = styled(ImageWrapper)`
  &:hover ${ImageOverlay} {
    opacity: 1;
    overflow: hidden;
  }
`;

const NavigationButton = styled.button`
  background: ${(props) => props.theme.background};
  color: ${(props) => props.theme.text};
  border: none;
  padding: 8px;
  cursor: pointer;
  border-radius: 50%;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  z-index: 10;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  transition: background 0.3s;

  &:hover {
    background: ${(props) => props.theme.hoverBackground};
  }

  ${(props) => props.$left && "left: 16px;"}
  ${(props) => props.$right && "right: 16px;"}

  @media (max-width: 768px) {
    ${(props) => props.$left && "left: 8px;"}
    ${(props) => props.$right && "right: 8px;"}
  }
`;

const CustomNextArrow = ({ onClick }) => (
  <NavigationButton $right onClick={onClick}>
    <FaArrowRight />
  </NavigationButton>
);

const CustomPrevArrow = ({ onClick }) => (
  <NavigationButton $left onClick={onClick}>
    <FaArrowLeft />
  </NavigationButton>
);

const Gallery = ({ theme }) => {
  const images = [
    { src: image1, title: "Namiot na 30 osób, biały", year: "" },
    { src: image2, title: "Namiot na 30 osób, biały", year: "" },
    { src: image3, title: "Namiot na 60 osób, biały", year: "" },
    { src: image4, title: "Krzesło białe, składane", year: "" },
    { src: image5, title: "Stół biały dla 6 osób, składany", year: "" },
    { src: image6, title: "Girlanda świetlna LED Ogrodowa 15m 30x", year: "" },
  ];

  const [isHovered, setIsHovered] = useState(false);
  const controls = useAnimation();
  const [isVisible, setIsVisible] = useState(false);

  useEffect(() => {
    const handleScroll = () => {
      const scrollPosition = window.scrollY + window.innerHeight;
      const gallerySection = document.getElementById("galeria");

      if (gallerySection && scrollPosition > gallerySection.offsetTop) {
        controls.start("visible");
        setIsVisible(true);
      } else {
        controls.start("hidden");
        setIsVisible(false);
      }
    };

    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, [controls]);

  const settings = {
    dots: false,
    infinite: true,
    speed: 500,
    slidesToShow: 1,
    slidesToScroll: 1,
    nextArrow: <CustomNextArrow />,
    prevArrow: <CustomPrevArrow />,
    responsive: [
      {
        breakpoint: 768,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 1,
        },
      },
      {
        breakpoint: 1024,
        settings: {
          slidesToShow: 2,
          slidesToScroll: 1,
        },
      },
    ],
  };

  return (
    <ThemeProvider theme={theme === "light" ? lightTheme : darkTheme}>
      <GalleryContainer id="galeria">
        <MotionTitle
          initial={{ x: -200 }}
          animate={{ x: 0 }}
          transition={{ delay: 0.3 }}
        >
          Namioty imprezowe
        </MotionTitle>
        <Slider {...settings}>
          {images.map((image, index) => (
            <ImageWrapperHover
              key={index}
              onMouseEnter={() => setIsHovered(true)}
              onMouseLeave={() => setIsHovered(false)}
            >
              <Image
                src={image.src}
                alt={`Artwork ${index + 1}`}
                initial={{ opacity: 0, scale: 0.9 }}
                animate={
                  isVisible && isHovered
                    ? { opacity: 1, scale: 1 }
                    : { opacity: 0, scale: 0.9 }
                }
                transition={{ duration: 0.6, delay: 0.2 }}
              />
              <ImageOverlay
                initial={{ opacity: 0 }}
                animate={isHovered ? { opacity: 1 } : { opacity: 0 }}
                transition={{ duration: 0.3 }}
              >
                {image.title} - {image.year}
              </ImageOverlay>
            </ImageWrapperHover>
          ))}
        </Slider>
      </GalleryContainer>
    </ThemeProvider>
  );
};

export default Gallery;



<title>Wynajem Namiotów Imprezowych, Stołów i Krzeseł</title>
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap"
    />
