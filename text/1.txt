import React, { useState } from "react";
import styled, { css } from "styled-components";
import { FaSun, FaMoon, FaBars, FaTimes } from "react-icons/fa";

const Navbar = ({ toggleTheme }) => {
  const [darkMode, setDarkMode] = useState(false);
  const [isOpen, setIsOpen] = useState(false);

  const toggleDarkMode = () => {
    const newDarkMode = !darkMode;
    setDarkMode(newDarkMode);
    document.body.classList.toggle("dark-mode", newDarkMode);
    toggleTheme();
  };

  const toggleMenu = () => {
    setIsOpen(!isOpen);
  };

  return (
    <NavbarContainer $darkMode={darkMode}>
      <NavbarWrapper>
        <Logo>Wynajem Namiotów</Logo>
        <MobileIcon onClick={toggleMenu}>
          {isOpen ? <FaTimes /> : <FaBars />}
        </MobileIcon>
      </NavbarWrapper>
      <NavLinksContainer>
        <NavLinks open={isOpen}>
          <NavLink href="#start">Start</NavLink>
          <NavLink href="#o-firmie">O firmie</NavLink>
          <NavLink href="#galeria">Galeria</NavLink>
          <NavLink href="#kontakt">Kontakt</NavLink>
          <DarkModeToggle onClick={toggleDarkMode}>
            {darkMode ? <FaSun /> : <FaMoon />}
          </DarkModeToggle>
        </NavLinks>
      </NavLinksContainer>
    </NavbarContainer>
  );
};

const NavbarContainer = styled.nav`
  position: fixed;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 999;
  background-color: ${({ theme }) => theme.body};
  color: ${({ theme }) => theme.text};
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);

  ${({ $darkMode }) =>
    $darkMode &&
    css`
      background-color: ${({ theme }) => theme.body};
      color: ${({ theme }) => theme.text};
    `}
`;

const NavbarWrapper = styled.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  max-width: 960px;
  padding: 20px;
`;

const Logo = styled.h1`
  font-size: 1.5rem;
  margin: 0;
  background: ${({ theme }) => theme.body};
  color: ${({ theme }) => theme.text};
  z-index: 1001;
`;

const MobileIcon = styled.div`
  display: none;

  @media screen and (max-width: 960px) {
    display: block;
    cursor: pointer;
    font-size: 1.5rem;
    color: ${({ theme }) => theme.text};
    z-index: 1000;
    position: absolute;
    top: 50%;
    right: 20px;
    transform: translateY(-50%);
  }
`;

const NavLinksContainer = styled.div`
  @media screen and (min-width: 961px) {
    display: flex;
    justify-content: space-around;
    align-items: center;
    flex-direction: row;
    position: relative;
    transform: translateY(0);
    background: none;
    color: ${({ theme }) => theme.text};
    top: auto;
    left: auto;
    right: auto;
    bottom: auto;
    height: auto;
    width: auto;
  }
`;

const NavLinks = styled.div`
  display: flex;
  justify-content: center;
  flex-direction: column;
  gap: 20px;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: ${({ theme }) => theme.body};
  color: ${({ theme }) => theme.text};
  transition: transform 0.3s ease-in-out;
  transform: ${({ open }) => (open ? "translateY(0)" : "translateY(-100%)")};
  width: 100%;
  z-index: 998;

  @media screen and (min-width: 961px) {
    display: flex;
    position: relative;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
    transform: translateY(0);
    background: none;
    color: ${({ theme }) => theme.text};
    top: auto;
    left: auto;
    right: auto;
    bottom: auto;
    height: auto;
    width: auto;
  }
`;

const NavLink = styled.a`
  color: ${({ theme }) => theme.text};
  text-decoration: none;
  padding: 1rem 0;
  text-align: center;
  transition: color 0.3s;

  &:hover {
    color: ${({ theme }) => theme.linkHover};
  }

  @media screen and (min-width: 961px) {
    padding: 0;
    margin: 0 10px;
  }
`;

const DarkModeToggle = styled.div`
  cursor: pointer;
  display: flex;
  justify-content: center;
  margin-top: 20px;

  svg {
    font-size: 1.2rem;
    color: ${({ theme }) => theme.text};
    transition: color 0.3s;
  }

  &:hover svg {
    color: ${({ theme }) => theme.linkHover};
  }

  @media screen and (min-width: 961px) {
    margin-top: 0;
  }
`;

export default Navbar;


import React, { useState } from "react";
import styled, { css } from "styled-components";
import { FaSun, FaMoon, FaBars, FaTimes } from "react-icons/fa";

const Navbar = ({ toggleTheme }) => {
  const [darkMode, setDarkMode] = useState(false);
  const [isOpen, setIsOpen] = useState(false);

  const toggleDarkMode = () => {
    const newDarkMode = !darkMode;
    setDarkMode(newDarkMode);
    document.body.classList.toggle("dark-mode", newDarkMode);
    toggleTheme();
  };

  const toggleMenu = () => {
    setIsOpen(!isOpen);
  };

  const handleSmoothScroll = (e, targetId) => {
    e.preventDefault();
    const targetElement = document.getElementById(targetId);
    if (targetElement) {
      targetElement.scrollIntoView({ behavior: "smooth" });
      setIsOpen(false);
    }
  };

  return (
    <NavbarContainer darkMode={darkMode}>
      <NavbarWrapper>
        <Logo>Wynajem Namiotów</Logo>
        <MobileIcon onClick={toggleMenu}>
          {isOpen ? <FaTimes /> : <FaBars />}
        </MobileIcon>
      </NavbarWrapper>
      <NavLinksContainer>
        <NavLinks isOpen={isOpen}>
          <NavLink
            href="#start"
            onClick={(e) => handleSmoothScroll(e, "start")}
          >
            Start
          </NavLink>
          <NavLink
            href="#o-firmie"
            onClick={(e) => handleSmoothScroll(e, "o-firmie")}
          >
            O firmie
          </NavLink>
          <NavLink
            href="#galeria"
            onClick={(e) => handleSmoothScroll(e, "galeria")}
          >
            Galeria
          </NavLink>
          <NavLink
            href="#kontakt"
            onClick={(e) => handleSmoothScroll(e, "kontakt")}
          >
            Kontakt
          </NavLink>
          <DarkModeToggle onClick={toggleDarkMode}>
            {darkMode ? <FaSun /> : <FaMoon />}
          </DarkModeToggle>
        </NavLinks>
      </NavLinksContainer>
    </NavbarContainer>
  );
};

const NavbarContainer = styled(({ darkMode, ...props }) => <nav {...props} />)`
  position: fixed;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 999;
  background-color: ${({ theme }) => theme.body};
  color: ${({ theme }) => theme.text};
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);

  ${({ darkMode }) =>
    darkMode &&
    css`
      background-color: ${({ theme }) => theme.body};
      color: ${({ theme }) => theme.text};
    `}
`;

const NavbarWrapper = styled.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  max-width: 960px;
  padding: 20px;
`;

const Logo = styled.h1`
  font-size: 1.5rem;
  margin: 0;
  background: ${({ theme }) => theme.body};
  color: ${({ theme }) => theme.text};
  z-index: 1001;
`;

const MobileIcon = styled.div`
  display: none;

  @media screen and (max-width: 960px) {
    display: block;
    cursor: pointer;
    font-size: 1.5rem;
    color: ${({ theme }) => theme.text};
    z-index: 1000;
    position: absolute;
    top: 50%;
    right: 20px;
    transform: translateY(-50%);
  }
`;

const NavLinksContainer = styled.div`
  @media screen and (min-width: 961px) {
    display: flex;
    justify-content: space-around;
    align-items: center;
    flex-direction: row;
    position: relative;
    transform: translateY(0);
    background: none;
    color: ${({ theme }) => theme.text};
    top: auto;
    left: auto;
    right: auto;
    bottom: auto;
    height: auto;
    width: auto;
  }
`;

const NavLinks = styled(({ isOpen, ...props }) => <div {...props} />)`
  display: flex;
  justify-content: center;
  flex-direction: column;
  gap: 20px;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: ${({ theme }) => theme.body};
  color: ${({ theme }) => theme.text};
  transition: transform 0.3s ease-in-out;
  transform: ${({ isOpen }) =>
    isOpen ? "translateY(0)" : "translateY(-100%)"};
  width: 100%;
  z-index: 998;

  @media screen and (min-width: 961px) {
    display: flex;
    position: relative;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
    transform: translateY(0);
    background: none;
    color: ${({ theme }) => theme.text};
    top: auto;
    left: auto;
    right: auto;
    bottom: auto;
    height: auto;
    width: auto;
  }
`;

const NavLink = styled.a`
  color: ${({ theme }) => theme.text};
  text-decoration: none;
  padding: 1rem 0;
  text-align: center;
  transition: color 0.3s;

  &:hover {
    color: ${({ theme }) => theme.linkHover};
  }

  @media screen and (min-width: 961px) {
    padding: 0;
    margin: 0 10px;
  }
`;

const DarkModeToggle = styled.div`
  cursor: pointer;
  display: flex;
  justify-content: center;
  margin-top: 20px;

  svg {
    font-size: 1.2rem;
    color: ${({ theme }) => theme.text};
    transition: color 0.3s;
  }

  &:hover svg {
    color: ${({ theme }) => theme.linkHover};
  }

  @media screen and (min-width: 961px) {
    margin-top: 0;
  }
`;

export default Navbar;



import React, { useState, useEffect } from "react";
import styled, { css } from "styled-components";
import { FaSun, FaMoon, FaBars, FaTimes } from "react-icons/fa";

const Navbar = ({ toggleTheme }) => {
  // Pobranie preferencji motywu z local storage lub ustawienie domyślnie jasnego motywu
  const savedDarkMode = localStorage.getItem("darkMode") === "true";
  const [darkMode, setDarkMode] = useState(savedDarkMode);
  const [isOpen, setIsOpen] = useState(false);

  // Funkcja do przełączania motywu
  const toggleDarkMode = () => {
    const newDarkMode = !darkMode;
    setDarkMode(newDarkMode);
    localStorage.setItem("darkMode", newDarkMode); // Zapisanie preferencji w local storage
    document.body.classList.toggle("dark-mode", newDarkMode);
    toggleTheme();
  };

  // Funkcja do przełączania menu mobilnego
  const toggleMenu = () => {
    setIsOpen(!isOpen);
  };

  // Obsługa płynnego scrollowania do sekcji
  const handleSmoothScroll = (e, targetId) => {
    e.preventDefault();
    const targetElement = document.getElementById(targetId);
    if (targetElement) {
      targetElement.scrollIntoView({ behavior: "smooth" });
      setIsOpen(false);
    }
  };

  // Efekt umożliwiający zachowanie preferencji motywu po odświeżeniu strony
  useEffect(() => {
    // Pobranie preferencji z local storage po załadowaniu komponentu
    const savedDarkMode = localStorage.getItem("darkMode") === "true";
    setDarkMode(savedDarkMode);
    document.body.classList.toggle("dark-mode", savedDarkMode);
  }, []);

  return (
    <NavbarContainer darkMode={darkMode}>
      <NavbarWrapper>
        <Logo>Wynajem Namiotów</Logo>
        <MobileIcon onClick={toggleMenu}>
          {isOpen ? <FaTimes /> : <FaBars />}
        </MobileIcon>
      </NavbarWrapper>
      <NavLinksContainer>
        <NavLinks isOpen={isOpen}>
          <NavLink
            href="#start"
            onClick={(e) => handleSmoothScroll(e, "start")}
          >
            Start
          </NavLink>
          <NavLink
            href="#o-firmie"
            onClick={(e) => handleSmoothScroll(e, "o-firmie")}
          >
            O firmie
          </NavLink>
          <NavLink
            href="#galeria"
            onClick={(e) => handleSmoothScroll(e, "galeria")}
          >
            Galeria
          </NavLink>
          <NavLink
            href="#kontakt"
            onClick={(e) => handleSmoothScroll(e, "kontakt")}
          >
            Kontakt
          </NavLink>
          <DarkModeToggle onClick={toggleDarkMode}>
            {darkMode ? <FaSun /> : <FaMoon />}
          </DarkModeToggle>
        </NavLinks>
      </NavLinksContainer>
    </NavbarContainer>
  );
};

// Styled components - bez zmian
const NavbarContainer = styled(({ darkMode, ...props }) => <nav {...props} />)`
  position: fixed;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 999;
  background-color: ${({ theme }) => theme.body};
  color: ${({ theme }) => theme.text};
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);

  ${({ darkMode }) =>
    darkMode &&
    css`
      background-color: ${({ theme }) => theme.body};
      color: ${({ theme }) => theme.text};
    `}
`;

const NavbarWrapper = styled.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  max-width: 960px;
  padding: 20px;
`;

const Logo = styled.h1`
  font-size: 1.5rem;
  margin: 0;
  background: ${({ theme }) => theme.body};
  color: ${({ theme }) => theme.text};
  z-index: 1001;
`;

const MobileIcon = styled.div`
  display: none;

  @media screen and (max-width: 960px) {
    display: block;
    cursor: pointer;
    font-size: 1.5rem;
    color: ${({ theme }) => theme.text};
    z-index: 1000;
    position: absolute;
    top: 50%;
    right: 20px;
    transform: translateY(-50%);
  }
`;

const NavLinksContainer = styled.div`
  @media screen and (min-width: 961px) {
    display: flex;
    justify-content: space-around;
    align-items: center;
    flex-direction: row;
    position: relative;
    transform: translateY(0);
    background: none;
    color: ${({ theme }) => theme.text};
    top: auto;
    left: auto;
    right: auto;
    bottom: auto;
    height: auto;
    width: auto;
  }
`;

const NavLinks = styled(({ isOpen, ...props }) => <div {...props} />)`
  display: flex;
  justify-content: center;
  flex-direction: column;
  gap: 20px;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: ${({ theme }) => theme.body};
  color: ${({ theme }) => theme.text};
  transition: transform 0.3s ease-in-out;
  transform: ${({ isOpen }) =>
    isOpen ? "translateY(0)" : "translateY(-100%)"};
  width: 100%;
  z-index: 998;

  @media screen and (min-width: 961px) {
    display: flex;
    position: relative;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
    transform: translateY(0);
    background: none;
    color: ${({ theme }) => theme.text};
    top: auto;
    left: auto;
    right: auto;
    bottom: auto;
    height: auto;
    width: auto;
  }
`;

const NavLink = styled.a`
  color: ${({ theme }) => theme.text};
  text-decoration: none;
  padding: 1rem 0;
  text-align: center;
  transition: color 0.3s;

  &:hover {
    color: ${({ theme }) => theme.linkHover};
  }

  @media screen and (min-width: 961px) {
    padding: 0;
    margin: 0 10px;
  }
`;

const DarkModeToggle = styled.div`
  cursor: pointer;
  display: flex;
  justify-content: center;
  margin-top: 20px;

  svg {
    font-size: 1.2rem;
    color: ${({ theme }) => theme.text};
    transition: color 0.3s;
  }

  &:hover svg {
    color: ${({ theme }) => theme.linkHover};
  }

  @media screen and (min-width: 961px) {
    margin-top: 0;
  }
`;

export default Navbar;



import React, { useState, useEffect } from "react";
import styled from "styled-components";
import Slider from "react-slick";
import { motion } from "framer-motion";

const GallerySection = styled.section`
  padding: 2rem;
`;

const images = [
  { src: "/assets/1.jpg", description: "Namiot 1", price: "100 zł" },
  { src: "/assets/1.jpg", description: "Namiot 2", price: "200 zł" },
  { src: "/assets/1.jpg", description: "Namiot 3", price: "300 zł" },
];

const settings = {
  dots: true,
  infinite: true,
  speed: 500,
  slidesToShow: 1,
  slidesToScroll: 1,
};

export const Gallery = () => {
  return (
    <GallerySection id="galeria">
      <motion.h2
        initial={{ y: -200 }}
        animate={{ y: 0 }}
        transition={{ delay: 0.3 }}
      >
        Galeria
      </motion.h2>
      <Slider {...settings}>
        {images.map((image, index) => (
          <div key={index}>
            <img src={image.src} alt={image.description} />
            <p>{image.description}</p>
            <p>{image.price}</p>
          </div>
        ))}
      </Slider>
    </GallerySection>
  );
};



import React, { useState } from "react";
import styled, { ThemeProvider } from "styled-components";
import { lightTheme, darkTheme } from "./styles/themes";
import Navbar from "./components/Navbar";
import { Header } from "./components/Header"; // Poprawiono import
import { Footer } from "./components/Footer"; // Poprawiono import
import Gallery from "./components/Gallery"; // Poprawiono import
import { About } from "./components/About"; // Poprawiono import
import Contact from "./components/Contact";
import { EquipmentSlider } from "./components/EquipmentSlider"; // Poprawiono import
import { CookieConsent } from "react-cookie-consent";
import { GlobalStyle } from "./styles/GlobalStyle"; // Poprawiono import
import ScrollToTopButton from "./ScrollToTopButton";

const AppContainer = styled.div`
  display: flex;
  flex-direction: column;
  min-height: 100vh;
`;

function App() {
  const [theme, setTheme] = useState("light");

  const toggleTheme = () => {
    setTheme(theme === "light" ? "dark" : "light");
    document.body.classList.toggle("dark-mode", theme === "light");
  };

  return (
    <ThemeProvider theme={theme === "light" ? lightTheme : darkTheme}>
      <GlobalStyle />
      <AppContainer>
        <Navbar toggleTheme={toggleTheme} />
        <Header />
        <About />
        <EquipmentSlider />
        <Gallery />
        <Contact />
        <Footer />
        <CookieConsent>
          Ta strona korzysta z plików cookie, aby zapewnić najlepszą jakość
          korzystania z niej.
        </CookieConsent>
        <ScrollToTopButton />
      </AppContainer>
    </ThemeProvider>
  );
}

export default App;
