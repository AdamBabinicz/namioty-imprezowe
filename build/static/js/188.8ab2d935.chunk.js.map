{"version":3,"file":"static/js/188.8ab2d935.chunk.js","mappings":"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","sources":["components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { FaSun, FaMoon, FaBars, FaTimes } from \"react-icons/fa\";\r\nimport { FaTent } from \"react-icons/fa6\";\r\nimport { motion } from \"framer-motion\";\r\nimport img from \"../assets/8.avif\";\r\n\r\nconst Navbar = ({ toggleTheme }) => {\r\n  const savedDarkMode = localStorage.getItem(\"darkMode\") === \"true\";\r\n  const [darkMode, setDarkMode] = useState(savedDarkMode);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleDarkMode = () => {\r\n    const newDarkMode = !darkMode;\r\n    setDarkMode(newDarkMode);\r\n    localStorage.setItem(\"darkMode\", newDarkMode);\r\n    document.body.classList.toggle(\"dark-mode\", newDarkMode);\r\n    toggleTheme();\r\n  };\r\n\r\n  const toggleMenu = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleSmoothScroll = (e, targetId) => {\r\n    e.preventDefault();\r\n    const targetElement = document.getElementById(targetId);\r\n    if (targetElement) {\r\n      const navbarHeight = document.querySelector(\"nav\").offsetHeight;\r\n      const targetPosition = targetElement.offsetTop - navbarHeight;\r\n      window.scrollTo({\r\n        top: targetPosition,\r\n        behavior: \"smooth\",\r\n      });\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  const scrollToTop = (e) => {\r\n    e.preventDefault();\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n    setIsOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const savedDarkMode = localStorage.getItem(\"darkMode\") === \"true\";\r\n    setDarkMode(savedDarkMode);\r\n    document.body.classList.toggle(\"dark-mode\", savedDarkMode);\r\n  }, []);\r\n\r\n  return (\r\n    <NavbarContainer darkMode={darkMode}>\r\n      <NavbarWrapper>\r\n        <Logo onClick={scrollToTop}>\r\n          <img src={img} alt=\"fotografia namiotu białego\" />\r\n          Wynajem Namiotów\r\n        </Logo>\r\n        <MobileIcon onClick={toggleMenu}>\r\n          {isOpen ? <FaTimes /> : <FaBars />}\r\n        </MobileIcon>\r\n      </NavbarWrapper>\r\n      <NavLinksContainer>\r\n        <NavLinks isOpen={isOpen}>\r\n          <NavLink\r\n            href=\"#start\"\r\n            onClick={(e) => handleSmoothScroll(e, \"start\")}\r\n          >\r\n            Start\r\n          </NavLink>\r\n          <NavLink\r\n            href=\"#o-firmie\"\r\n            onClick={(e) => handleSmoothScroll(e, \"o-firmie\")}\r\n          >\r\n            O&nbsp;firmie\r\n          </NavLink>\r\n          <NavLink\r\n            href=\"#kontakt\"\r\n            onClick={(e) => handleSmoothScroll(e, \"kontakt\")}\r\n          >\r\n            Kontakt\r\n          </NavLink>\r\n          <NavLink\r\n            href=\"#galeria\"\r\n            onClick={(e) => handleSmoothScroll(e, \"galeria\")}\r\n          >\r\n            Oferta\r\n          </NavLink>\r\n          <DarkModeToggle onClick={toggleDarkMode}>\r\n            {darkMode ? <FaSun /> : <FaMoon />}\r\n          </DarkModeToggle>\r\n          <MobileTentIcon>\r\n            <span\r\n              data-tooltip-id=\"tentTooltip\"\r\n              data-tooltip-content=\"Namioty Imprezowe\"\r\n            >\r\n              <motion.div\r\n                whileHover={{ scale: 1.1, rotate: 10 }}\r\n                whileTap={{ scale: 0.9 }}\r\n                transition={{ type: \"spring\", stiffness: 300 }}\r\n              >\r\n                <FaTent size={40} />\r\n              </motion.div>\r\n            </span>\r\n          </MobileTentIcon>\r\n        </NavLinks>\r\n      </NavLinksContainer>\r\n    </NavbarContainer>\r\n  );\r\n};\r\n\r\nconst NavbarContainer = styled(({ darkMode, ...props }) => <nav {...props} />)`\r\n  position: fixed;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 999;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n\r\n  ${({ darkMode }) =>\r\n    darkMode &&\r\n    css`\r\n      background: ${({ theme }) => theme.body};\r\n      color: ${({ theme }) => theme.text};\r\n    `}\r\n`;\r\n\r\nconst NavbarWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 960px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.text};\r\n\r\n  img {\r\n    width: 50px;\r\n    height: auto;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nconst MobileIcon = styled.div`\r\n  display: none;\r\n\r\n  @media screen and (max-width: 960px) {\r\n    display: block;\r\n    cursor: pointer;\r\n    font-size: 1.5rem;\r\n    color: ${({ theme }) => theme.text};\r\n    z-index: 1000;\r\n  }\r\n`;\r\n\r\nconst NavLinksContainer = styled.div`\r\n  @media screen and (min-width: 961px) {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    flex-direction: row;\r\n    background: none;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n`;\r\n\r\nconst NavLinks = styled(({ isOpen, ...props }) => <div {...props} />)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  transition: transform 0.3s ease-in-out;\r\n  transform: ${({ isOpen }) =>\r\n    isOpen ? \"translateY(0)\" : \"translateY(-100%)\"};\r\n  width: 100%;\r\n  z-index: 998;\r\n\r\n  @media screen and (min-width: 961px) {\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 0;\r\n    position: relative;\r\n    transform: translateY(0);\r\n    background: none;\r\n  }\r\n`;\r\n\r\nconst NavLink = styled.a`\r\n  color: ${({ theme }) => theme.text};\r\n  text-decoration: none;\r\n  padding: 1rem 0;\r\n  text-align: center;\r\n  transition: color 0.3s;\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.linkHover};\r\n  }\r\n\r\n  @media screen and (min-width: 961px) {\r\n    padding: 0;\r\n    margin: 0 10px;\r\n  }\r\n`;\r\n\r\nconst MobileTentIcon = styled.div`\r\n  display: none;\r\n\r\n  @media screen and (max-width: 960px) {\r\n    display: block;\r\n    text-align: center;\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nconst DarkModeToggle = styled.div`\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n\r\n  svg {\r\n    font-size: 1.2rem;\r\n    color: ${({ theme }) => theme.text};\r\n    transition: color 0.3s;\r\n  }\r\n\r\n  &:hover svg {\r\n    color: ${({ theme }) => theme.linkHover};\r\n  }\r\n\r\n  @media screen and (min-width: 961px) {\r\n    margin-top: 0;\r\n    margin-left: 10px; /* Dodaj margines lewy */\r\n  }\r\n`;\r\n\r\nexport default Navbar;\r\n"],"names":["NavbarContainer","styled","_ref2","darkMode","props","_jsx","_templateObject","_taggedTemplateLiteral","_ref3","theme","body","_ref4","text","_ref5","css","_templateObject2","_ref6","_ref7","NavbarWrapper","div","_templateObject3","Logo","_templateObject4","_ref8","MobileIcon","_templateObject5","_ref9","NavLinksContainer","_templateObject6","_ref10","NavLinks","_ref11","isOpen","_templateObject7","_ref12","_ref13","_ref14","NavLink","a","_templateObject8","_ref15","_ref16","linkHover","MobileTentIcon","_templateObject9","DarkModeToggle","_templateObject10","_ref17","_ref18","_ref","toggleTheme","savedDarkMode","localStorage","getItem","setDarkMode","useState","setIsOpen","handleSmoothScroll","e","targetId","preventDefault","targetElement","document","getElementById","navbarHeight","querySelector","offsetHeight","targetPosition","offsetTop","window","scrollTo","top","behavior","useEffect","classList","toggle","_jsxs","children","onClick","src","img","alt","toggleMenu","FaTimes","FaBars","href","toggleDarkMode","newDarkMode","setItem","FaSun","FaMoon","motion","whileHover","scale","rotate","whileTap","transition","type","stiffness","FaTent","size"],"sourceRoot":""}